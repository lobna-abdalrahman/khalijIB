@model InternetBanking_v1.Models.ReceiptModel
@using InternetBanking_v1.Helper

@{
    ViewBag.Title = "Receipt";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var token = "";
    string name = Session["userName"].ToString();
    if (Model.token != null)
    {
        token = Model.token.Substring(1, 4) + "-" + Model.token.Substring(4, 4) + "-" + Model.token.Substring(8, 4) + "-" + Model.token.Substring(12, 4) + "-" + Model.token.Substring(16, 4);
    }
}

    <head>

        <style>
            /*span {
                color: #3C8DBC;
            }*/

            @@media print {
                body * {
                    visibility: hidden;
                }

                .divtoprint * {
                    visibility: visible;
                    height:20px;
                }
                .paypal__footer * {
                    visibility:hidden;
                }
            }
        </style>

        <style>

            .inspired-by {
                display: block;
                position: relative;
                margin-bottom: 15px;
                text-align: center;
                color: #fff;
                font-size: 14px;
            }

            .paypal {
                position: relative;
                left: 50%;
                display: inline-block;
                /*min-width: 500px;*/
                max-width: 100%;
                width: auto;
                margin: 50px auto 25px;
                padding: 20px 0;
                clear: both;
                -webkit-transform: translateX(-50%);
                -ms-transform: translateX(-50%);
                -o-transform: translateX(-50%);
                transform: translateX(-50%);
            }

                .paypal__header {
                    display: flex;
                    -ms-align-items: flex-start;
                    align-items: flex-start;
                    padding: 30px 30px 45px;
                    background: #fff;
                    border-top-right-radius: 5px;
                    border-top-left-radius: 5px;
                }

                .paypal__logo-wrapper {
                    flex: 1 0 40%;
                }

                .paypal__logo {
                    display: block;
                    width: 50px;
                    height: auto;
                    margin-left: 15px;
                }

                .paypal__header-info {
                    flex: 1 0 50%;
                }

                .paypal__date,
                .paypal__ref {
                    display: block;
                    font-size: 19px;
                    color: #aaa;
                    font-weight: 300;
                }

                .paypal__date {
                    margin-bottom: 5px;
                }

                .paypal__subheader-wrapper {
                    background: #fff;
                    padding-bottom: 20px;
                }

                .paypal__subheader {
                    padding: 0 45px 0 40px;
                    border-left: 5px solid #029de0;
                }

                .paypal__username {
                    margin: 0 0 10px 0;
                    font-size: 22px;
                    font-weight: 600;
                }

                .paypal__help-text {
                    color: #aaa;
                    font-weight: 300;
                }

                .paypal__cart {
                    display: block;
                    padding: 25px 30px 45px;
                }

                .paypal__cart-title {
                    display: block;
                    margin-top: 0;
                    margin-bottom: 25px;
                    text-align: center;
                }

                .paypal__cart-list {
                    margin: 0;
                    padding: 0 15px;
                    list-style: none;
                }

                .paypal__cart-item {
                    display: block;
                    padding-top: 20px;
                    margin-bottom: 20px;
                    border-top: 2px dashed #aaa;
                    font-size: 18px;
                }

                    .paypal__cart-item:first-child {
                        border-top: 0;
                    }

                    .paypal__cart-item:last-child {
                        margin-bottom: 0;
                        border-top: 2px solid #ffe155;
                    }

                .paypal__index {
                    padding-right: 15px;
                    color: #aaa;
                    font-weight: 300;
                }

                .paypal__item-name {
                    color: #aaa;
                    font-weight: 300;
                }

                .paypal__item-price {
                    float: right;
                    letter-spacing: 1px;
                }

                .paypal__cart-total {
                    font-size: 20px;
                    text-transform: uppercase;
                }

                .paypal__footer {
                    position: relative;
                    padding: 30px 20px;
                    border-top: 2px dashed #ff84a1;
                    border-bottom-left-radius: 5px;
                    border-bottom-right-radius: 5px;
                }

                    .paypal__footer::before,
                    .paypal__footer::after {
                        content: "";
                        position: absolute;
                        top: 0;
                        border: 4px solid transparent;
                        -webkit-transform: translateY(calc(-50% - 1px));
                        -ms-transform: translateY(calc(-50% - 1px));
                        -o-transform: translateY(calc(-50% - 1px));
                        transform: translateY(calc(-50% - 1px));
                    }

                    .paypal__footer::before {
                        left: 0;
                        border-left: 7px solid #ff85a1;
                    }

                    .paypal__footer::after {
                        right: 0;
                        border-right: 7px solid #ff85a1;
                    }

                .paypal__barcode {
                    display: block;
                    margin: 0 auto;
                    max-width: 300px;
                    height: auto;
                }

                /**
            * Paypal Animations
            */

                @@keyframes show-paypal {
                    0% {
                        opacity: 0;
                        transform: scale(0) translateX(-50%);
                    }

                    85% {
                        opacity: 0;
                    }

                    100% {
                        opacity: 1;
                        transform: scale(1) translateX(-50%);
                    }
                }

                .paypal {
                    transform-origin: top left;
                    animation: show-paypal 1s ease-out forwards;
                }

                @@keyframes show-subheader {
                    0% {
                        opacity: 0;
                        transform: scale(0);
                    }

                    65% {
                        opacity: 0;
                    }

                    100% {
                        opacity: 1;
                        transform: scale(1);
                    }
                }

                .paypal__subheader {
                    opacity: 0;
                    animation: show-subheader 1s 0.5s ease-out forwards;
                }

                @@keyframes slide-down {
                    to {
                        transform: perspective(100px) rotateX(0) translate3d(0, 0, 0);
                    }
                }

                .paypal__cart {
                    background-color: #fff;
                    transform-style: preserve-3d;
                    transform-origin: top center;
                    transform: perspective(100px) rotateX(-90deg) translate3d(0, 0, 0);
                    animation: slide-down 0.4s 2s ease-out forwards;
                }

                .paypal__footer {
                    background-color: #fff;
                    transform-style: preserve-3d;
                    transform-origin: top center;
                    transform: perspective(100px) rotateX(-90deg) translate3d(0, 0, 0);
                    animation: slide-down 0.4s 2.5s ease-out forwards;
                }

                @@keyframes show-cart-title {
                    to {
                        opacity: 1;
                        transform: translateY(0);
                    }
                }

                .paypal__cart-title {
                    opacity: 0;
                    transform: translateY(10px);
                    animation: show-cart-title 0.5s 2.25s ease-in forwards;
                }

                @@keyframes show-cart-item {
                    to {
                        opacity: 1;
                        transform: translateX(0);
                    }
                }

                .paypal__cart-item {
                    opacity: 0;
                    transform: translateX(-30px);
                    animation: show-cart-item 0.3s 2.75s ease-in forwards;
                }

                    .paypal__cart-item:nth-child(2) {
                        animation-delay: 2.9s;
                    }

                    .paypal__cart-item:nth-child(3) {
                        animation-delay: 3.05s;
                    }

                    .paypal__cart-item:nth-child(4) {
                        animation-delay: 3.2s;
                    }
        </style>
        <title>Document</title>
    </head>
<body>
    <!--
      Inspired by Vladyslav Tyzun / Awesomed
      https://dribbble.com/shots/2738907-PayPal-Email-Receipt
    -->
    <html>
    <head>
        <meta charset="utf-8" />
        <title>UI 1</title>

        <link rel="shortcut icon" href="paypal.png" />

        <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600"
              rel="stylesheet" />
        <link rel="stylesheet" href="style.css" charset="utf-8" />
    </head>
    <body>
        <div class="paypal divtoprint">
            <div class="paypal__header" style="background-color:#3C8DBC">
                <img src="~/Content/icons/mini-logo.png" style="width:100%;height:100%" alt="Paypal" class="paypal__logo" />
            </div>
            <div class="paypal__subheader-wrapper">
                <br />
                <div class="paypal__subheader">
                    <h1 class="paypal__username">Hello, @name</h1>
                    <span class="paypal__help-text">@GlobalRes.SuccesHeader</span>
                </div>
            </div>
            <div class="paypal__cart">
                <h2 class="paypal__cart-title">Transactions details</h2>
                <ul class="paypal__cart-list">
                    @if (Model != null && !String.IsNullOrEmpty(Model.available))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.AvailableBalance</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.available)</span>
                        </li>
                    }
                    @if (Model != null && !String.IsNullOrEmpty(Model.leger))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.leger</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.leger)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.acuirerTransactionFees))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.acuirerTransactionFees</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.acuirerTransactionFees)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Date))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Date</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Date)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Time))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.time</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Time)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.frombranch))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.frombranch</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.frombranch)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.fromaccounttype))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.fromaccounttype</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.fromaccounttype)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.toaccount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.toaccdet</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.toaccount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.toaccounttype))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.toaccounttype</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.toaccounttype)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.tobranch))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.tobranch</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.tobranch)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.expDate))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.expDate</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.expDate)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.token))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Token</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.token)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.responseMessage))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.responsemessage</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.responseMessage)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.responseStatus))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.responsestatus</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.responseStatus)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.fromCard))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.fromcard</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.fromCard)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.toCard))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.tocard</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.toCard)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.issuerTransactionFees))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.issuertranfee</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.issuerTransactionFees)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.dynamicFees))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.dynamicfees</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.dynamicFees)</span>
                        </li>
                    }
                    @if (Model != null && !String.IsNullOrEmpty(Model.ReceiptNumber))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.receiptNo</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.ReceiptNumber)</span>
                        </li>
                    }
                    @if (Model != null && !String.IsNullOrEmpty(Model.studentNo))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.studentno</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.studentNo)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.formNo))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.formNo</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.formNo)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.englishName))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.englishName</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.englishName)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.arabicName))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.arabicname</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.arabicName)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.BankCode))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.bankcode</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.BankCode)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Transrefrence))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.transactionrefrence</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Transrefrence)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Amount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Amount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Amount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.DeclarantNAME))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.declrantname</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.DeclarantNAME)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.InstanceID))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.instanceid</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.InstanceID)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.ProcStatus))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.procstatus</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.ProcStatus)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.ProcError))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.procError</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.ProcError)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.receiptserial))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.receiptNo</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.receiptserial)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Office))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Office</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Office)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Declarant))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Declarant</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Declarant)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.DECNBER))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.DeclarantNumer</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.DECNBER)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Transaction))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Transaction</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Transaction)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Year))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.year</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Year)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.DECSER))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Details</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.DECSER)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.DecNo))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.DeclarantNumber</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.DecNo)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.E15ReceiptNumber))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.e15number</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.E15ReceiptNumber)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.paymentinfo))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.Payment</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.paymentinfo)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.DeclarantNumber))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.DeclarantNumber</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.DeclarantNumber)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.Declarant_Name))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.declrantname</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.Declarant_Name)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.meterFees))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.MeterFees</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.meterFees)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.netAmount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.NetAmount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.netAmount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.customerName))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.customename</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.customerName)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.accountNo))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.AccountNo</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.accountNo)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.meterNumber))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.MeterNumber</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.meterNumber)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.unitsInKWh))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.UnitsInKwh</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.unitsInKWh)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.meterFees))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.MeterFees</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.meterFees)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.waterFees))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.WaterFees</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.waterFees)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.opertorMessage))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.operatormessage</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.opertorMessage)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.ReferenceId))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.refrenceid</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.ReferenceId)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.UnitName))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.unitname</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.UnitName)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.ServiceName))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.servicename</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.ServiceName)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.PayerName))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.payername</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.PayerName)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.TotalAmount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.TotalAmount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.TotalAmount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.receiptNo))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.receiptNo</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.receiptNo)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.contractNumber))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.contractNumber</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.contractNumber)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.unbilledAmount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.unbilledAmount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.unbilledAmount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.total_Amount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.TotalAmount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.total_Amount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.lastInvoiceDate))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.LastInvoiceDate</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.lastInvoiceDate)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.last4Digits))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.last4digits</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.last4Digits)</span>
                        </li>
                    }
                    @if (Model != null && !String.IsNullOrEmpty(Model.billedAmount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.billedamount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.billedAmount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.BillAmount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.BillAmount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.BillAmount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.total))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.total</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.total)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.SubscriberID))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.subscriberid</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.SubscriberID)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.bill_Amount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.BillAmount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.bill_Amount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.DueAmount))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.dueamount</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.DueAmount)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.InvoiceExpiry))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.invoiceexpiry</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.InvoiceExpiry)</span>
                        </li>
                    }@if (Model != null && !String.IsNullOrEmpty(Model.InvoiceStatus))
                    {
                        <li class="paypal__cart-item">
                            <span class="paypal__item-name">@GlobalRes.invoicestatus</span>
                            <span class="paypal__item-price">@Html.DisplayFor(model => model.InvoiceStatus)</span>
                        </li>
                    }
                </ul>
            </div>
            <div class="paypal__footer">
                <img src="https://i.ibb.co/c8CQvBq/barcode.png"
                     alt="Paypal Barcode"
                     class="paypal__barcode" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-2 col-xs-offset-5">
                <input type="submit" onclick="window.print();" value=@GlobalRes.printreceipt class="btn btn-danger btn-block btn-flat" style="background-color:#3C8DBC;border-color:#3C8DBC"/>
            </div>
        </div>
        <br />
        <br />
        <br />
    </body>
</html>
</body>