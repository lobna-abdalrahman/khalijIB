@using InternetBanking_v1.Helper
@model InternetBanking_v1.Models.ChangePasswordViewModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        @GlobalRes.Services_Parent
        <small>@GlobalRes.Update_Password_Title</small>
    </h1>
    @if (CultureHelper.IsRighToLeft())
    {
        <ol class="breadcrumb pull-left" style="position: static;">
            <li><a href="#"><i class="fa fa-dashboard"></i>@GlobalRes.Services_Parent</a></li>
            <li class="active">@GlobalRes.Update_Password_Title</li>
        </ol>
    }
    else
    {
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i>@GlobalRes.Services_Parent</a></li>
            <li class="active">@GlobalRes.Update_Password_Title</li>
        </ol>
    }

</section>


@if (TempData["Success"] != null)
{
    if (ViewBag.ResponseStat.ToString().Equals("Successful"))
    {

        <div class="alert alert-success alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <h4><i class="icon fa fa-check"></i> @ViewBag.ResponseStat</h4>
            @ViewBag.ResponseMSG
        </div>

    }
    else if (ViewBag.ResponseStat.ToString().Equals("Not Successful"))
    {
        <div class="alert alert-danger alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <h4><i class="icon fa fa-ban"></i> @ViewBag.ResponseStat</h4>
            @ViewBag.ResponseMSG
        </div>

    }
}


<section class="content">
    <div class="row">
        <!-- Left Column-->
        <div class="col-md-10 col-md-offset-1 ">
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">@GlobalRes.Change_Your_Password </h3>
                    @if (CultureHelper.IsRighToLeft())
                    {
                        <div class="box-tools" style="position: static; float: left;">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                        </div>
                    }
                </div>


                <div class="box-body">
                    <div class="row">
                        <div class="col-md-6 col-md-offset-4">

                            @using (Html.BeginForm("ChangePassword","ChangePassword","POST"))
                            {
                                @Html.AntiForgeryToken()

                                    @Html.ValidationSummary(true)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CurrentPassword)
                                        @Html.TextBoxFor(model => model.CurrentPassword, new { @class = "form-control input-lg", @type = "password", maxlength = "20", minlength = "8", @pattern = "([A-Za-z0-9_@#]{8,20})", @placeholder = GlobalRes.CurrentPassowrd, required = "true" })
                                        @Html.ValidationMessageFor(model => model.CurrentPassword)
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NewPassword)
                                        @Html.TextBoxFor(model => model.NewPassword, new { @class = "form-control input-lg", @type = "password", maxlength = "20", minlength = "8", @pattern = "([A-Za-z0-9_@#]{8,20})", @placeholder = GlobalRes.NewPassowrd, required = "true" })
                                        @Html.ValidationMessageFor(model => model.NewPassword)
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ReNewPassword)
                                        @Html.TextBoxFor(model => model.ReNewPassword, new { @class = "form-control input-lg", @type = "password", maxlength = "20", minlength = "8", @pattern = "([A-Za-z0-9_@#]{8,20})", @placeholder = GlobalRes.reNewPassowrd, required = "true" })
                                        @Html.ValidationMessageFor(model => model.ReNewPassword)
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-xs-4">
                                            <input type="submit" value=@GlobalRes.ButtonUpdate class="btn btn-danger btn-block btn-flat" />
                                        </div>
                                    </div>
                                
                            }



                            @section Scripts {
                                @Scripts.Render("~/bundles/jqueryval")
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

